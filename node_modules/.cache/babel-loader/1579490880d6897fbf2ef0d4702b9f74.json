{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport youtube from '../apis/youtube.js';\nconst KEY = 'AIzaSyAydF2UPyJ2xoTUh3Y77OhtX5bi8GNARVc';\n\nconst useVideos = defaultSearchTerm => {\n  const [videos, setVideos] = useState([]);\n  useEffect(() => search(defaultSearchTerm), [defaultSearchTerm]);\n\n  const search = async SearchTerm => {\n    const response = await youtube.get('/search', {\n      params: {\n        q: SearchTerm,\n        type: 'video',\n        part: 'snippet',\n        maxResults: 5,\n        key: KEY\n      }\n    });\n    setVideos(response.data.items);\n  };\n\n  return [videos, search];\n};\n\nexport default useVideos;","map":{"version":3,"sources":["/home/afees/Documents/Learn/React/youtube-hooks/src/hooks/useVideos.js"],"names":["useEffect","useState","youtube","KEY","useVideos","defaultSearchTerm","videos","setVideos","search","SearchTerm","response","get","params","q","type","part","maxResults","key","data","items"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,GAAG,GAAG,yCAAZ;;AACA,MAAMC,SAAS,GAAIC,iBAAD,IAAuB;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAMQ,MAAM,CAACH,iBAAD,CAAb,EAAkC,CAACA,iBAAD,CAAlC,CAAT;;AAEA,QAAMG,MAAM,GAAG,MAAOC,UAAP,IAAsB;AACnC,UAAMC,QAAQ,GAAG,MAAMR,OAAO,CAACS,GAAR,CAAY,SAAZ,EAAuB;AAC5CC,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAEJ,UADG;AAENK,QAAAA,IAAI,EAAE,OAFA;AAGNC,QAAAA,IAAI,EAAE,SAHA;AAINC,QAAAA,UAAU,EAAE,CAJN;AAKNC,QAAAA,GAAG,EAAEd;AALC;AADoC,KAAvB,CAAvB;AASAI,IAAAA,SAAS,CAACG,QAAQ,CAACQ,IAAT,CAAcC,KAAf,CAAT;AACD,GAXD;;AAaA,SAAO,CAACb,MAAD,EAASE,MAAT,CAAP;AACD,CAlBD;;AAoBA,eAAeJ,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport youtube from '../apis/youtube.js';\n\nconst KEY = 'AIzaSyAydF2UPyJ2xoTUh3Y77OhtX5bi8GNARVc';\nconst useVideos = (defaultSearchTerm) => {\n  const [videos, setVideos] = useState([]);\n  useEffect(() => search(defaultSearchTerm), [defaultSearchTerm]);\n\n  const search = async (SearchTerm) => {\n    const response = await youtube.get('/search', {\n      params: {\n        q: SearchTerm,\n        type: 'video',\n        part: 'snippet',\n        maxResults: 5,\n        key: KEY,\n      },\n    });\n    setVideos(response.data.items);\n  };\n\n  return [videos, search];\n};\n\nexport default useVideos;\n"]},"metadata":{},"sourceType":"module"}